/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package hosbitaltest;

import javax.swing.JOptionPane;
import java.awt.HeadlessException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import net.proteanit.sql.DbUtils;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author Helal
 */
public class Reception extends javax.swing.JFrame  {
    Connection con=null;
    ResultSet rs=null;
    PreparedStatement pst=null;
    
    
    /**
     * Creates new form Reception
     */
    public Reception() {
        initComponents();
        //getdata();
    }
private void getdata()
{
     String sql="select ID as 'Patient ID',NAME as 'Patient Name',AGE as 'AGE',TEL as 'TEL' from APP.PATIENT order by ID";
        try{
            con=connect.connectdb();
            pst=con.prepareStatement(sql);
            rs= pst.executeQuery();
            jTable1.setModel(DbUtils.resultSetToTableModel(rs));
         }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
         }
}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton3 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        btnDOCNAME = new javax.swing.JButton();
        btnDOCID = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        PATIENTSD = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        srhpID = new javax.swing.JTextField();
        srcpNAME = new javax.swing.JTextField();
        srcdname = new javax.swing.JTextField();
        srcdID = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton3.setText("VIEW PATIENT");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton5.setText("VIEW DOCTOR");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("SEARCH FOR A PATIENT BY ID");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setText("SEARCH FOR PATIENT BY NAME");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        btnDOCNAME.setText("SEARCH FOR DOCTOR BY NAME");
        btnDOCNAME.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDOCNAMEActionPerformed(evt);
            }
        });

        btnDOCID.setText("SEARCH FOR A DOCTOR BY ID");
        btnDOCID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDOCIDActionPerformed(evt);
            }
        });

        jButton10.setText("SET APPOINTMENT");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        PATIENTSD.setText("PATIENTS ");
        PATIENTSD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PATIENTSDActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null}
            },
            new String [] {
                "Patient ID", "Patient Name", "AGE", "TEL"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        srcdname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                srcdnameActionPerformed(evt);
            }
        });

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null}
            },
            new String [] {
                "Doctor ID", "Docotor Name", "Specialization", "TEL"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTable2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(70, 70, 70)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(btnDOCNAME, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(srcdname)
                            .addComponent(srcpNAME)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(srhpID, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(PATIENTSD, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnDOCID, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(srcdID, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 94, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(73, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(PATIENTSD)
                        .addGap(40, 40, 40)
                        .addComponent(jButton3)
                        .addGap(32, 32, 32)
                        .addComponent(jButton5))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton6)
                    .addComponent(srhpID, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(srcpNAME)
                            .addComponent(jButton7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnDOCNAME)
                            .addComponent(srcdname, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnDOCID)
                            .addComponent(srcdID, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jButton10))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(138, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
      //to clear table before search
        DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
        model.setRowCount(0);
        try{ String sql="select * from APP.PATIENT";
            con=connect.connectdb();
            pst=con.prepareStatement(sql);
            rs= pst.executeQuery();
            //jTable1.setModel(DbUtils.resultSetToTableModel(rs));
            while(rs.next()){
                String PatientID=String.valueOf(rs.getInt("ID"));
                String PatientName=String.valueOf(rs.getString("NAME"));
                String Patientage=String.valueOf(rs.getInt("AGE"));
                String PatientTel=String.valueOf(rs.getInt("TEL"));
                
                String tbdata[]={PatientID,PatientName,Patientage,PatientTel};
                DefaultTableModel tblmodel=(DefaultTableModel)jTable1.getModel();
                tblmodel.addRow(tbdata);
            }
         }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
         }       
 
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
     //to clear table before search
        DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
        model.setRowCount(0);
        
        try{ String sql="select * from APP.DOCTOR";
            con=connect.connectdb();
            pst=con.prepareStatement(sql);
            rs= pst.executeQuery();
            
            while(rs.next()){
                String DoctorID=String.valueOf(rs.getInt("ID"));
                String DoctorName=String.valueOf(rs.getString("NAME"));
                String docage=String.valueOf(rs.getString("SPECIALIZATION"));
                String docTel=String.valueOf(rs.getInt("TEL"));
                
                String tbdata[]={DoctorID,DoctorName,docage,docTel};
                DefaultTableModel tblmodel=(DefaultTableModel)jTable2.getModel();
                tblmodel.addRow(tbdata);
            }
         }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
         }       
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
       //to clear table before search
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0);
        con=connect.connectdb();
        if (srhpID.getText().equals("")) {
            JOptionPane.showMessageDialog( this, "Please enter PATIENT ID","Error", JOptionPane.ERROR_MESSAGE);
            return;}
        String idd=srhpID.getText();
        PATINT P=new PATINT();
        DefaultTableModel tblmodel=(DefaultTableModel)jTable1.getModel();
        tblmodel.addRow(P.Search_id(idd));

    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
     //to clear table before search
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0);
       
            con=connect.connectdb();
            if (srcpNAME.getText().equals("")) {
                JOptionPane.showMessageDialog( this, "Please enter patient name","Error", JOptionPane.ERROR_MESSAGE);
                return;}
            String name=srcpNAME.getText();
            PATINT P=new PATINT();
            DefaultTableModel tblmodel=(DefaultTableModel)jTable1.getModel();
            tblmodel.addRow(P.Search_name(name));
        
    }//GEN-LAST:event_jButton7ActionPerformed

    private void btnDOCNAMEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDOCNAMEActionPerformed
       //to clear table before search
        DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
        model.setRowCount(0);

            if (srcdname.getText().equals("")) {
                JOptionPane.showMessageDialog( this, "Please enter Doctor name","Error", JOptionPane.ERROR_MESSAGE);
                return;}
            String name=srcdname.getText();
            Maindoctor d=new Maindoctor();
            DefaultTableModel tblmodel=(DefaultTableModel)jTable2.getModel();
            tblmodel.addRow(d.Search_name(name));
            
            
    }//GEN-LAST:event_btnDOCNAMEActionPerformed

    private void btnDOCIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDOCIDActionPerformed
       //to clear table before search
        DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
        model.setRowCount(0);
            if (srcdID.getText().equals("")) {
                JOptionPane.showMessageDialog( this, "Please enter Doctor ID","Error", JOptionPane.ERROR_MESSAGE);
                return;}
            String id=srcdID.getText();
            Maindoctor d=new Maindoctor();
            DefaultTableModel tblmodel=(DefaultTableModel)jTable2.getModel();
            tblmodel.addRow(d.Search_id(id));
            
           
    }//GEN-LAST:event_btnDOCIDActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        
         new Appointment().setVisible(true);
    }//GEN-LAST:event_jButton10ActionPerformed

    private void PATIENTSDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PATIENTSDActionPerformed
       
                        dispose();
                        new Patientedit().setVisible(true);
    }//GEN-LAST:event_PATIENTSDActionPerformed

    private void srcdnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_srcdnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_srcdnameActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Reception.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Reception.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Reception.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Reception.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Reception().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton PATIENTSD;
    private javax.swing.JButton btnDOCID;
    private javax.swing.JButton btnDOCNAME;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField srcdID;
    private javax.swing.JTextField srcdname;
    private javax.swing.JTextField srcpNAME;
    private javax.swing.JTextField srhpID;
    // End of variables declaration//GEN-END:variables
}
